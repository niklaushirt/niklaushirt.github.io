<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nick on GitHub</title>
    <description>Nick&#39;s repositories on GitHub.
</description>
    <link>http://nik.cloud/</link>
    <atom:link href="http://nik.cloud/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 30 Mar 2016 10:44:10 +0200</pubDate>
    <lastBuildDate>Wed, 30 Mar 2016 10:44:10 +0200</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>Easy UrbanCode Deploy with Vagrant</title>
        <description>&lt;p&gt;This article describes my process of automatically creating deployment targets for an IBM UrbanCode Deploy environment.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Vagrant must be &lt;a href=&quot;https://www.vagrantup.com/docs/getting-started/index.html&quot;&gt;installed on your local machine&lt;/a&gt;. 
It can be downloaded and installed from &lt;a href=&quot;https://docs.vagrantup.com/v2/getting-started/index.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;building-the-bases&quot;&gt;Building the bases&lt;/h2&gt;

&lt;p&gt;In order to optimise performance, in this first article we will first build a base box image containing some basic stuff:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The IBM UrbanCode Deploy Agent installation files&lt;/li&gt;
  &lt;li&gt;Java JRE&lt;/li&gt;
  &lt;li&gt;Docker engine&lt;/li&gt;
  &lt;li&gt;Docker compose&lt;/li&gt;
  &lt;li&gt;NodeJS&lt;/li&gt;
  &lt;li&gt;NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;create-the-vagrant-file&quot;&gt;Create the Vagrant File&lt;/h3&gt;

&lt;p&gt;First we start with the “config” section in which we define that the base image is based on Ubuntu 14.04.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
 
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ubuntu/trusty64&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For this article I chose to create an inline shell script in order to make it a simple on-file solution to start with.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; &lt;span class=&quot;c&quot;&gt;# Provision the Base image&lt;/span&gt;
  config.vm.provision &lt;span class=&quot;s2&quot;&gt;&quot;shell&quot;&lt;/span&gt;, inline: &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt;-SHELL&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So first we update the package manager and install the unzip binary.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;    &lt;span class=&quot;c&quot;&gt;#UPDATE    &lt;/span&gt;
    sudo apt-get update
    &lt;span class=&quot;c&quot;&gt;#GET UNZIP&lt;/span&gt;
    sudo apt-get install unzip&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next we install the Java JRE needed to run the UrbanCode Deploy Agent&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;c&quot;&gt;#INSTALL JAVA&lt;/span&gt;
    sudo apt-get install --fix-missing -y
    sudo apt-get install openjdk-6-jre-headless -y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;optional-steps&quot;&gt;Optional Steps&lt;/h4&gt;

&lt;p&gt;For my specific example, I need install the following additional elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker engine&lt;/li&gt;
  &lt;li&gt;Docker compose&lt;/li&gt;
  &lt;li&gt;NodeJS&lt;/li&gt;
  &lt;li&gt;NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install the Docker Engine&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;c&quot;&gt;#INSTALL DOCKER&lt;/span&gt;
    sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    sudo &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;deb https://apt.dockerproject.org/repo ubuntu-trusty main&#39;&lt;/span&gt; &amp;gt; /etc/apt/sources.list.d/docker.list
    sudo apt-get update
    sudo apt-get install docker-engine -y
    sudo service docker stop
    sudo service docker start
    sudo usermod -aG docker vagrant&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Isntall Docker Compose&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;     &lt;span class=&quot;c&quot;&gt;#INSTALL DOCKER COMPOSE&lt;/span&gt;
    curl -L https://github.com/docker/compose/releases/download/1.6.2/docker-compose-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -s&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -m&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &amp;gt; docker-compose
    sudo mv docker-compose /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install NodeJS and NPM&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;c&quot;&gt;#INSTALL NODE/NPM&lt;/span&gt;
    sudo apt-get install nodejs -y
    sudo apt-get install npm -y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And I pull some Docker images to speed up deployment&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;c&quot;&gt;#PULL DOCKER IMAGES&lt;/span&gt;
    docker pull node
    docker pull dockerui/dockerui
    docker pull tutum/haproxyXXX&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create a directory for the project and copy the above code into a file called Vagrant finally run the vagrant boxScreen Shot 2016-01-19 at 10.05.31&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mkdir my_ucd_agent_base
nano Vagrant
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_ucd_agent_base
mkdir vagrant_data
vagrant up&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When done, we’ll create a box image of the base&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;vagrant package --output base_agent.box
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
mkdir my_ucd_agent
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_ucd_agent
cp ../my_ucd_agent_base/base_agent.box .
Building the IBM UrbanCode Deploy Agent Box&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sdfadfs&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# vi: set ft=ruby :&lt;/span&gt;


&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Use the base box for speed&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../1_BASE_BOX/package.box&quot;&lt;/span&gt;
   
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Customize the amount of memory on the VM:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;512&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    
        &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;agent&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# Create a private network, which allows host-only access to the machine using a specific IP.&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;private_network&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ip: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.231.4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#Creates agents in the 192.168.231.4x subnet&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;# Share the agent installation file with the VM&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;synced_folder&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./ucd_config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/ucd_config&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:shell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./ucd_config/install.sh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 30 Mar 2016 08:45:12 +0200</pubDate>
        <link>http://nik.cloud/urbancode/vagrant/2016/03/30/welcome-to-jekyll-3.html</link>
        <guid isPermaLink="true">http://nik.cloud/urbancode/vagrant/2016/03/30/welcome-to-jekyll-3.html</guid>
        
        
        <category>urbancode</category>
        
        <category>vagrant</category>
        
      </item>
    
      <item>
        <title>Easy UrbanCode Deploy with Vagrant (part 2)</title>
        <description>&lt;p&gt;This article describes my process of automatically creating deployment targets for an IBM UrbanCode Deploy environment.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Vagrant must be &lt;a href=&quot;https://www.vagrantup.com/docs/getting-started/index.html&quot;&gt;installed on your local machine&lt;/a&gt;. 
It can be downloaded and installed from &lt;a href=&quot;https://docs.vagrantup.com/v2/getting-started/index.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;building-the-bases&quot;&gt;Building the bases&lt;/h2&gt;

&lt;p&gt;In order to optimise performance, in this first article we will first build a base box image containing some basic stuff:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The IBM UrbanCode Deploy Agent installation files&lt;/li&gt;
  &lt;li&gt;Java JRE&lt;/li&gt;
  &lt;li&gt;Docker engine&lt;/li&gt;
  &lt;li&gt;Docker compose&lt;/li&gt;
  &lt;li&gt;NodeJS&lt;/li&gt;
  &lt;li&gt;NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;create-the-vagrant-file&quot;&gt;Create the Vagrant File&lt;/h3&gt;

&lt;p&gt;First we start with the “config” section in which we define that the base image is based on Ubuntu 14.04.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
 
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ubuntu/trusty64&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For this article I chose to create an inline shell script in order to make it a simple on-file solution to start with.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt; &lt;span class=&quot;c&quot;&gt;# Provision the Base image&lt;/span&gt;
  config.vm.provision &lt;span class=&quot;s2&quot;&gt;&quot;shell&quot;&lt;/span&gt;, inline: &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt;-SHELL&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So first we update the package manager and install the unzip binary.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;    &lt;span class=&quot;c&quot;&gt;#UPDATE    &lt;/span&gt;
    sudo apt-get update
    &lt;span class=&quot;c&quot;&gt;#GET UNZIP&lt;/span&gt;
    sudo apt-get install unzip&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next we install the Java JRE needed to run the UrbanCode Deploy Agent&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;c&quot;&gt;#INSTALL JAVA&lt;/span&gt;
    sudo apt-get install --fix-missing -y
    sudo apt-get install openjdk-6-jre-headless -y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;optional-steps&quot;&gt;Optional Steps&lt;/h4&gt;

&lt;p&gt;For my specific example, I need install the following additional elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker engine&lt;/li&gt;
  &lt;li&gt;Docker compose&lt;/li&gt;
  &lt;li&gt;NodeJS&lt;/li&gt;
  &lt;li&gt;NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install the Docker Engine&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;c&quot;&gt;#INSTALL DOCKER&lt;/span&gt;
    sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    sudo &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;deb https://apt.dockerproject.org/repo ubuntu-trusty main&#39;&lt;/span&gt; &amp;gt; /etc/apt/sources.list.d/docker.list
    sudo apt-get update
    sudo apt-get install docker-engine -y
    sudo service docker stop
    sudo service docker start
    sudo usermod -aG docker vagrant&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Isntall Docker Compose&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;     &lt;span class=&quot;c&quot;&gt;#INSTALL DOCKER COMPOSE&lt;/span&gt;
    curl -L https://github.com/docker/compose/releases/download/1.6.2/docker-compose-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -s&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -m&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &amp;gt; docker-compose
    sudo mv docker-compose /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Install NodeJS and NPM&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;   &lt;span class=&quot;c&quot;&gt;#INSTALL NODE/NPM&lt;/span&gt;
    sudo apt-get install nodejs -y
    sudo apt-get install npm -y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And I pull some Docker images to speed up deployment&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;  &lt;span class=&quot;c&quot;&gt;#PULL DOCKER IMAGES&lt;/span&gt;
    docker pull node
    docker pull dockerui/dockerui
    docker pull tutum/haproxyXXX&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Create a directory for the project and copy the above code into a file called Vagrant finally run the vagrant boxScreen Shot 2016-01-19 at 10.05.31&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mkdir my_ucd_agent_base
nano Vagrant
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_ucd_agent_base
mkdir vagrant_data
vagrant up&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When done, we’ll create a box image of the base&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;vagrant package --output base_agent.box
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
mkdir my_ucd_agent
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_ucd_agent
cp ../my_ucd_agent_base/base_agent.box .
Building the IBM UrbanCode Deploy Agent Box&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;sdfadfs&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# -*- mode: ruby -*-&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# vi: set ft=ruby :&lt;/span&gt;


&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Use the base box for speed&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;../1_BASE_BOX/package.box&quot;&lt;/span&gt;
   
    &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provider&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;virtualbox&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Customize the amount of memory on the VM:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;vb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;memory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;512&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;    
        &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;define&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;agent&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# Create a private network, which allows host-only access to the machine using a specific IP.&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;private_network&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ip: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;192.168.231.4&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#Creates agents in the 192.168.231.4x subnet&lt;/span&gt;
            
            &lt;span class=&quot;c1&quot;&gt;# Share the agent installation file with the VM&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;synced_folder&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./ucd_config&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/ucd_config&quot;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;provision&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:shell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;./ucd_config/install.sh&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&#39;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;&quot;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 30 Mar 2016 08:45:12 +0200</pubDate>
        <link>http://nik.cloud/urbancode/vagrant/2016/03/30/vagrant_ucd_part2.html</link>
        <guid isPermaLink="true">http://nik.cloud/urbancode/vagrant/2016/03/30/vagrant_ucd_part2.html</guid>
        
        
        <category>urbancode</category>
        
        <category>vagrant</category>
        
      </item>
    
      <item>
        <title>Easy UrbanCode Deploy with Vagrant (part 1)</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/vagrant_article_header.jpg&quot; alt=&quot;header&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This article describes my process of automatically creating deployment targets for an IBM UrbanCode Deploy environment.&lt;/p&gt;

&lt;p&gt;All the sourcecode is freely available in my &lt;a href=&quot;https://github.com/niklaushirt/UrbanCode_Vagrant&quot; target=&quot;_blank&quot;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Vagrant must be &lt;a href=&quot;https://www.vagrantup.com/docs/getting-started/index.html&quot; target=&quot;_blank&quot;&gt;installed on your local machine&lt;/a&gt;. 
It can be downloaded and installed from &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;building-the-bases&quot;&gt;Building the bases&lt;/h2&gt;

&lt;p&gt;In order to optimise performance, in this first article we will first build a base box image containing some basic stuff:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Java JRE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And optional (to speed-up VM creation):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker engine&lt;/li&gt;
  &lt;li&gt;Docker compose&lt;/li&gt;
  &lt;li&gt;NodeJS&lt;/li&gt;
  &lt;li&gt;NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;create-the-vagrant-file&quot;&gt;1_ Create the Vagrant File&lt;/h3&gt;

&lt;p&gt;First we start with the “config” section in which we define that the base image is based on Ubuntu 14.04.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Vagrant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
 
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;vm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;box&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ubuntu/trusty64&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For this article I chose to create an inline shell script in order to make it a simple on-file solution to start with.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# Provision the Base image&lt;/span&gt;
  config.vm.provision &lt;span class=&quot;s2&quot;&gt;&quot;shell&quot;&lt;/span&gt;, inline: &lt;span class=&quot;sh&quot;&gt;&amp;lt;&amp;lt;-SHELL
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So first we update the package manager and install the unzip binary.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;c&quot;&gt;#UPDATE    &lt;/span&gt;
    sudo apt-get update
    &lt;span class=&quot;c&quot;&gt;#GET UNZIP&lt;/span&gt;
    sudo apt-get install unzip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next we install the Java JRE needed to run the UrbanCode Deploy Agent&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;#INSTALL JAVA&lt;/span&gt;
    sudo apt-get install --fix-missing -y
    sudo apt-get install openjdk-6-jre-headless -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;optional-steps&quot;&gt;Optional Steps&lt;/h4&gt;

&lt;p&gt;For my specific example, I need install the following additional elements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker engine&lt;/li&gt;
  &lt;li&gt;Docker compose&lt;/li&gt;
  &lt;li&gt;NodeJS&lt;/li&gt;
  &lt;li&gt;NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install the Docker Engine&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;c&quot;&gt;#INSTALL DOCKER&lt;/span&gt;
    sudo apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
    sudo &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;deb https://apt.dockerproject.org/repo ubuntu-trusty main&#39;&lt;/span&gt; &amp;gt; /etc/apt/sources.list.d/docker.list
    sudo apt-get update
    sudo apt-get install docker-engine -y
    sudo service docker stop
    sudo service docker start
    sudo usermod -aG docker vagrant
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Install Docker Compose&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     &lt;span class=&quot;c&quot;&gt;#INSTALL DOCKER COMPOSE&lt;/span&gt;
    curl -L https://github.com/docker/compose/releases/download/1.6.2/docker-compose-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -s&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -m&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &amp;gt; docker-compose
    sudo mv docker-compose /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Install NodeJS and NPM&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;c&quot;&gt;#INSTALL NODE/NPM&lt;/span&gt;
    sudo apt-get install nodejs -y
    sudo apt-get install npm -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And I pull some Docker images to speed up deployment&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;#PULL DOCKER IMAGES&lt;/span&gt;
    docker pull node
    docker pull dockerui/dockerui
    docker pull tutum/haproxyXXX
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;create-the-the-base-box&quot;&gt;2_ Create the the Base Box&lt;/h3&gt;

&lt;p&gt;Create a directory for the project and copy the above code into a file called &lt;em&gt;Vagrant&lt;/em&gt; and finally run &lt;em&gt;vagrant up&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/vagrant_Base_build.jpg&quot; alt=&quot;terminal build&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir my_ucd_agent_base
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my_ucd_agent_base
nano Vagrant
&lt;span class=&quot;c&quot;&gt;#Paste the File Content&lt;/span&gt;
mkdir vagrant_data
vagrant up
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When done, we’ll create a box image of the base&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant package --output base_agent.box
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;sdfadfs&lt;/p&gt;

</description>
        <pubDate>Wed, 30 Mar 2016 08:45:12 +0200</pubDate>
        <link>http://nik.cloud/urbancode/vagrant/2016/03/30/vagrant_ucd_part1.html</link>
        <guid isPermaLink="true">http://nik.cloud/urbancode/vagrant/2016/03/30/vagrant_ucd_part1.html</guid>
        
        
        <category>urbancode</category>
        
        <category>vagrant</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Mar 2016 17:45:12 +0100</pubDate>
        <link>http://nik.cloud/jekyll/update/2016/03/26/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://nik.cloud/jekyll/update/2016/03/26/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Mar 2016 17:45:12 +0100</pubDate>
        <link>http://nik.cloud/jekyll/update/2016/03/26/welcome-to-jekyll-2.html</link>
        <guid isPermaLink="true">http://nik.cloud/jekyll/update/2016/03/26/welcome-to-jekyll-2.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>TEST!</title>
        <description>&lt;h1 id=&quot;niks-cheat-sheet&quot;&gt;Nik’s Cheat Sheet&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#installationofbasicstuff&quot;&gt;Installation of basic stuff&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#commands&quot;&gt;Useful Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dockerdoc&quot;&gt;Detailed Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installation-of-basic-stuff&quot;&gt;Installation of basic stuff&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#docker&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#vagrant&quot;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#other&quot;&gt;Other&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ibm&quot;&gt;IBM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;docker&quot;&gt;Docker&lt;/h2&gt;
&lt;p&gt;### Docker Engine
```bash
sudo apt-key adv –keyserver hkp://pgp.mit.edu:80 –recv-keys 58118E89F3A912897C070ADBF76221572C52609D&lt;/p&gt;

&lt;p&gt;sudo echo ‘deb https://apt.dockerproject.org/repo ubuntu-trusty main’ &amp;gt; /etc/apt/sources.list.d/docker.list&lt;/p&gt;

&lt;p&gt;sudo apt-get update&lt;/p&gt;

&lt;p&gt;sudo apt-get install docker-engine&lt;/p&gt;

&lt;p&gt;sudo service docker stop
sudo service docker start&lt;/p&gt;

&lt;p&gt;sudo usermod -aG docker ubuntu&lt;/p&gt;

&lt;p&gt;logout
```&lt;/p&gt;

&lt;h3 id=&quot;docker-machine&quot;&gt;Docker Machine&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd
&lt;/span&gt;curl -L https://github.com/docker/machine/releases/download/v0.6.0/docker-machine-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -s&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -m&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &amp;gt;./docker-machine
sudo mv docker-machine /usr/local/bin/docker-machine
chmod +x /usr/local/bin/docker-machine
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;docker-compose&quot;&gt;Docker Compose&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd
&lt;/span&gt;sudo curl -L https://github.com/docker/compose/releases/download/1.6.0/docker-compose-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -s&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;-&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;uname -m&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; &amp;gt; ./docker-compose
sudo mv docker-compose /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;### Docker UI
&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
docker run -d -p 9000:9000 --name &quot;DOCKER_UI&quot; --privileged -v /var/run/docker.sock:/var/run/docker.sock dockerui/dockerui
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;docker-ucp&quot;&gt;Docker UCP&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;uname -r
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Must be &amp;gt;=3.16&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install linux-image-generic-lts-utopic -y
sudo reboot
docker run –rm -it -v /var/run/docker.sock:/var/run/docker.sock –name ucp dockerorca/ucp install -i
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;docker-cadvisor&quot;&gt;Docker cAdvisor&lt;/h3&gt;
&lt;p&gt;Install cadvisor&lt;/p&gt;

&lt;p&gt;https://github.com/google/cadvisor&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --volume&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/:/rootfs:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --volume&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/run:/var/run:rw &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --volume&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/sys:/sys:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --volume&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/lib/docker/:/var/lib/docker:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --publish&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9001:8080 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --detach&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;cadvisor &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  google/cadvisor:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;docker-splunk&quot;&gt;Docker Splunk&lt;/h3&gt;
&lt;p&gt;Splunk&lt;/p&gt;

&lt;p&gt;https://github.com/outcoldman/docker-splunk&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --hostname splunk -p 9002:8000 -p 9997:9997 -d outcoldman/splunk:6.3.2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;https://hub.docker.com/r/outcoldman/docker-stats-splunk-forwarder/&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    docker run --hostname docker &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --name docker_stats_splunk_forwarder &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    --volume /var/run/docker.sock:/var/run/docker.sock:ro &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;s2&quot;&gt;&quot;SPLUNK_FORWARD_SERVER=192.168.232.71:9997&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -e &lt;span class=&quot;s2&quot;&gt;&quot;SPLUNK_USER=root&quot;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    -d outcoldman/docker-stats-splunk-forwarder:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;COMPOSE&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vsplunk:
  image: busybox
  volumes:
    - /opt/splunk/etc
    - /opt/splunk/var

splunk:
  hostname: splunk
  image: outcoldman/splunk:splunk:6.3.2
  volumes_from:
    - vsplunk
  ports:
    - 8000:8000
    - 9997:9997
  restart: always
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;docker-rancher&quot;&gt;Docker Rancher&lt;/h3&gt;
&lt;p&gt;Rancher Server&lt;/p&gt;

&lt;p&gt;http://docs.rancher.com/rancher/installing-rancher/installing-server/&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -d --name RANCHER_SERVER --restart&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always -p 9003:8080 rancher/server

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Rancher Host&lt;/p&gt;

&lt;p&gt;http://docs.rancher.com/rancher/installing-rancher/installing-server/&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo docker run -d --restart&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;always -p 9003:8080 rancher/server

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;docker-xxx&quot;&gt;Docker XXX&lt;/h3&gt;
&lt;p&gt;XXX&lt;/p&gt;

&lt;p&gt;https://github.com/google/XXX&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TODO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;sensu&quot;&gt;Sensu&lt;/h3&gt;
&lt;p&gt;Server&lt;/p&gt;

&lt;p&gt;https://hub.docker.com/r/hiroakis/docker-sensu-server/&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d -p 10022:22 -p 3006:3000 -p 4567:4567 -p 5671:5671 -p 15672:15672 hiroakis/docker-sensu-server

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Client&lt;/p&gt;

&lt;p&gt;https://sensuapp.org/docs/0.21/install-repositories&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget -q http://repositories.sensuapp.org/apt/pubkey.gpg -O- | sudo apt-key add -
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb     http://repositories.sensuapp.org/apt sensu main&quot;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/sensu.list
sudo apt-get update
sudo apt-get install sensu

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;neo4j&quot;&gt;Neo4j&lt;/h3&gt;

&lt;p&gt;https://hub.docker.com/_/neo4j/&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --detach --publish&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;7474:7474 --volume&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/TEMP/neo4j/data:/data neo4j
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;kubernetes&quot;&gt;Kubernetes&lt;/h2&gt;
&lt;p&gt;http://kubernetes.io/v1.1/docs/getting-started-guides/docker.html&lt;/p&gt;

&lt;p&gt;Run etcd
&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
docker run --net=host -d gcr.io/google_containers/etcd:2.0.12 /usr/local/bin/etcd --addr=127.0.0.1:4001 --bind-addr=0.0.0.0:4001 --data-dir=/var/etcd/data
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run the master
&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
docker run \
    --volume=/:/rootfs:ro \
    --volume=/sys:/sys:ro \
    --volume=/dev:/dev \
    --volume=/var/lib/docker/:/var/lib/docker:ro \
    --volume=/var/lib/kubelet/:/var/lib/kubelet:rw \
    --volume=/var/run:/var/run:rw \
    --net=host \
    --pid=host \
    --privileged=true \
    -d \
    gcr.io/google_containers/hyperkube:v1.0.1 \
    /hyperkube kubelet --containerized --hostname-override=&quot;127.0.0.1&quot; --address=&quot;0.0.0.0&quot; --api-servers=http://localhost:8080 --config=/etc/kubernetes/manifests
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Run the service proxy
&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
docker run -d --net=host --privileged gcr.io/google_containers/hyperkube:v1.0.1 /hyperkube proxy --master=http://127.0.0.1:8080 --v=2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Install the kubectl binary&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://storage.googleapis.com/kubernetes-release/release/v1.0.1/bin/linux/amd64/kubectl
sudo mv kubectl /usr/local/bin/kubectl
sudo chmod +x /usr/local/bin/kubectl

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run an application&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl -s http://localhost:8080 run nginx --image&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx --port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Test Service&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl expose rc nginx --port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80
kubectl get svc nginx
kubectl get svc nginx --template&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Scale&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl get svc nginx

kubectl get po
kubectl run my-nginx --image&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx --replicas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;14 --port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80
kubectl run my-nginx --image&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx --replicas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;14 --port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80
kubectl scale --replicas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 rc my-nginx
kubectl scale --replicas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30 rc my-nginx
kubectl scale --replicas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 rc my-nginx

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Launching a simple application&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl run my-nginx --image&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx --replicas&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 --port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80
kubectl get po
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Exposing your application to the Internet&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl expose rc my-nginx --port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80 --type&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;LoadBalancer
kubectl get svc my-nginx

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Killing the application&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kubectl delete rc my-nginx
kubectl delete svc my-nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;vagrant&quot;&gt;Vagrant&lt;/h2&gt;
&lt;p&gt;TODO&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant up
vagrant destroy
vagrant ssh
  
vagrant package --output ucd_base_agent
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;git&quot;&gt;GIT&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo rm -r .git
git init
git add .
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;first commit&quot;&lt;/span&gt;
git remote add origin http://hirt.cc:9005/IoT/MQTT_DEMO.git
git push -u origin master


git init
git add .
git status
git commit -m &lt;span class=&quot;s2&quot;&gt;&quot;Initial Version&quot;&lt;/span&gt;
git remote add origin https://github.com/niklaushirt/urbancode_server_docker.git
git push -u origin master
 
git pull origin master

git clone http://...

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;GIT Log History Changes&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log --numstat --pretty&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%H&quot;&lt;/span&gt; --since&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2016/03/21&quot;&lt;/span&gt; --until&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2017/02/06&quot;&lt;/span&gt; | awk &lt;span class=&quot;s1&quot;&gt;&#39;NF==3 {plus+=$1; minus+=$2} END {printf(&quot;+%d, -%d\n&quot;, plus, minus)}&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;bluemix-cloud-foundry&quot;&gt;Bluemix Cloud Foundry&lt;/h2&gt;

&lt;p&gt;https://www.ng.bluemix.net/docs/cli/index.html#downloads&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://cli.run.pivotal.io/stable?release&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debian64&amp;amp;version&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6.15.0&amp;amp;source&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;github-rel
mv stable&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debian64 cf_installer.deb 
sudo dpkg -i cf_installer.deb 

cf add-plugin-repo bluemix-cf http://plugins.ng.bluemix.net
cf install-plugin IBM-Containers -r bluemix-cf

dev_mode         1.1.1     cfDevModeDesc   
active-deploy    0.1.76    cfActiveDeployDesc   
IBM-Containers   0.8.499   cfContainersDesc   
bluemix-admin    1.0.0     cfBluemixAdminDesc   
vpn              0.1.1     cfVpnDesc   


cf install-plugin plugin_name -r bluemix-cf


&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cf login https://api.ng.bluemix.net


cf api https://api.ng.bluemix.net 
cf login -u nikh@ch.ibm.com -o nikh@ch.ibm.com -s dev

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;gogs-local-github&quot;&gt;GOGS local github&lt;/h2&gt;

&lt;p&gt;https://github.com/gogits/gogs&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d --name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;gogs -p 10022:22 -p 10080:3000 -v /Users/nhirt/TEMP/gogs:/data gogs/gogs

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget -qO - https://deb.packager.io/key | sudo apt-key add -
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;deb https://deb.packager.io/gh/pkgr/gogs trusty pkgr&quot;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/gogs.list
sudo apt-get update
sudo apt-get install gogs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gogs:
  image: rosstimson/gogs
  links:
    - db
  ports:
    - &quot;22:22&quot;
    - &quot;80:3000&quot;

db:
  image: mariadb:10
  environment:
    MYSQL_ROOT_PASSWORD: rootpass
    MYSQL_DATABASE: gogs
    MYSQL_USER: gogs
    MYSQL_PASSWORD: gogs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;other&quot;&gt;Other&lt;/h2&gt;
&lt;p&gt;###Install Java in Ubuntu&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install default-jre
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Install NodeJS&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install nodejs
sudo apt-get install npm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Cheap Performance Test&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install siege
siege -c50 -b -t10S -v http://192.168.232.77:8881/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Certificate based SSH&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh -i &lt;span class=&quot;s2&quot;&gt;&quot;aws_ubuntu.pem&quot;&lt;/span&gt; ubuntu@52.29.222.63
scp -i &lt;span class=&quot;s2&quot;&gt;&quot;aws_ubuntu.pem&quot;&lt;/span&gt; /IBM/INSTALL/2_CLOUD/1_URBANCODE/UCD/UCD_6.2.0.1/ibm-ucd-6.2.0.1.716068.zip ubuntu@52.29.222.63:/home/ubuntu


ssh -i &lt;span class=&quot;s2&quot;&gt;&quot;aws_ubuntu.pem&quot;&lt;/span&gt; ibmcloud@52.29.222.63

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Install NTP for Date update&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ntpdate ntp.ubuntu.com
sudo apt-get install ntp
date
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Install Mosquitto&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mosquitto_passwd -c mosquitto_users demo

sudo nano /etc/mosquitto/mosquitto.conf 

		Place your &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;configuration &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /etc/mosquitto/conf.d/
		&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
		&lt;span class=&quot;c&quot;&gt;# A full description of the configuration file is at&lt;/span&gt;
		&lt;span class=&quot;c&quot;&gt;# /usr/share/doc/mosquitto/examples/mosquitto.conf.example&lt;/span&gt;
		
		pid_file /var/run/mosquitto.pid
		
		persistence &lt;span class=&quot;nb&quot;&gt;true
		&lt;/span&gt;persistence_location /var/lib/mosquitto/
		
		log_dest file /var/log/mosquitto/mosquitto.log
		
		include_dir /etc/mosquitto/conf.d
		
		
		password_file /home/demo/mosquitto_users
		allow_anonymous &lt;span class=&quot;nb&quot;&gt;false



&lt;/span&gt;sudo service mosquitto stop
sudo service mosquitto start

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Install OpenVPN&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install openvpn
wget http://swupdate.openvpn.org/as/openvpn-as-2.0.24-Ubuntu14.amd_64.deb
sudo dpkg -i openvpn-as-2.0.24-Ubuntu14.amd_64.deb 

passwd openvpn
adduser XXXX

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Install PPTP&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install pptpd

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;edit /etc/pptpd.conf and add the following lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;localip 10.0.0.1
remoteip 10.0.0.100-200

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Where localip is IP address of your server and remoteip are IPs that will be assigned to clients that connect to it.&lt;/p&gt;

&lt;p&gt;Add users and passwords /etc/ppp/chap-secrets&lt;/p&gt;

&lt;p&gt;Where client is the username, server is type of service – pptpd for our example, secret is the password, and IP addresses specifies which IP address may authenticate. By setting ‘*’ in IP addresses field, you specify that you would accept username/password pair for any IP.&lt;/p&gt;

&lt;p&gt;Add DNS servers to /etc/ppp/pptpd-options
&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
ms-dns 8.8.8.8
ms-dns 8.8.4.4
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you can start PPTP daemon:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service pptpd restart
netstat -alpn | grep :1723

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Setup Forwarding
edit /etc/sysctl.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;net.ipv4.ip_forward &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;then run&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sysctl -p

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Create a NAT rule for iptables&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; iptables-save
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables --table nat --append POSTROUTING --out-interface ppp0 -j MASQUERADE
iptables -I INPUT -s 10.0.0.0/8 -i ppp0 -j ACCEPT
iptables --append FORWARD --in-interface eth0 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;###Install PPTP&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;OVPN_DATA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ovpn-data&quot;&lt;/span&gt;
docker run --name &lt;span class=&quot;nv&quot;&gt;$OVPN_DATA&lt;/span&gt; -v /etc/openvpn busybox
docker run --volumes-from &lt;span class=&quot;nv&quot;&gt;$OVPN_DATA&lt;/span&gt; --rm kylemanna/openvpn ovpn_genconfig -u udp://hirt.cc
docker run --volumes-from &lt;span class=&quot;nv&quot;&gt;$OVPN_DATA&lt;/span&gt; --rm -it kylemanna/openvpn ovpn_initpki
docker run --volumes-from &lt;span class=&quot;nv&quot;&gt;$OVPN_DATA&lt;/span&gt; -d -p 1194:1194/udp --cap-add&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;NET_ADMIN kylemanna/openvpn
docker run --volumes-from &lt;span class=&quot;nv&quot;&gt;$OVPN_DATA&lt;/span&gt; --rm -it kylemanna/openvpn easyrsa build-client-full MBP nopass
docker run --volumes-from &lt;span class=&quot;nv&quot;&gt;$OVPN_DATA&lt;/span&gt; --rm kylemanna/openvpn ovpn_getclient MBP &amp;gt; MBP
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;ibm&quot;&gt;IBM&lt;/h2&gt;
&lt;p&gt;TODO&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TODO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;bluemix-containers&quot;&gt;Bluemix Containers&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Download and install the Docker CLI, CloudFoundry CLI, and ibm-containers cf CLI plug-in.&lt;/li&gt;
  &lt;li&gt;Log in to Bluemix:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cf login
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Run the IBM Containers cf CLI plug-in.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cf ic login
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Create a Dockerfile in the root directory of your app source files. Learn more about Dockerfiles.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Build an image from your Dockerfile. The command returns an image ID.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker build -t image_name
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Tag the image with your private namespace in the IBM Containers registry.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker tag image_name registry.ng.bluemix.net/niklaushirt/image_name:image_tag
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Push this image to the IBM Containers registry:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker push registry.ng.bluemix.net/niklaushirt/image_name:image_tag
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;You can create a container from this image in the Bluemix Catalog, or with the following command:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cf ic run --name container_name registry.ng.bluemix.net/niklaushirt/image_name:image_tag
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;commands&quot;&gt;Commands&lt;/h2&gt;

&lt;h3 id=&quot;docker-commands&quot;&gt;Docker Commands&lt;/h3&gt;

&lt;p&gt;####Docker Machine
&lt;code class=&quot;highlighter-rouge&quot;&gt;
docker-machine create -d=virtualbox TEST
eval $(docker-machine env TEST)
&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-machine create --driver vmwarefusion --vmwarefusion-memory-size 2048 osxdock 
eval $(docker-machine env osxdock)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-machine create --driver virtualbox --virtualbox-memory 2048 dev 
eval $(docker-machine env dev)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;####Stop All containers
&lt;code class=&quot;highlighter-rouge&quot;&gt;
docker stop $(docker ps -a -q)
docker rm -v $(docker ps -a -q)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####BUILD
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker build -t=&quot;jazz502:test&quot; .
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####RUN
```
sudo docker run -t -i -p 9443:9443 -p 9080:9080 jazz501base&lt;/p&gt;

&lt;p&gt;sudo docker run -d -P -p 9443:9443 -p 9080:9080 –name jazz jazz501inst&lt;/p&gt;

&lt;p&gt;sudo docker run -d -P -p 9443:9443 -p 9080:9080 -h demo.jazz.com –name jazz jazz501inst&lt;/p&gt;

&lt;p&gt;sudo docker run -d -P -p 9443:9443 -p 9080:9080 -h demo.jazz.com –name jazz jazz501:base&lt;/p&gt;

&lt;p&gt;sudo docker run -d -P -p 9443:9443 -p 9080:9080 -h demo.jazz.com –name jazz jazz501:base&lt;/p&gt;

&lt;p&gt;sudo docker run -d -P -p 49500:22222 -p 9443:9443 -p 9080:9080 -h demo.jazz.com –name jazz5 jazz502:test&lt;/p&gt;

&lt;p&gt;sudo docker run -t -i -p 49500:22222 -p 9443:9443 -p 9080:9080 -h demo.jazz.com –name jazz5 jazz502:test /bin/bash&lt;/p&gt;

&lt;p&gt;sudo docker run -d -P -p 49500:22222 -p 9444:9443 -p 9080:9080 -h lean.jazz.com –name jazzlean jazz502:test
```&lt;/p&gt;

&lt;p&gt;####LOGS
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker logs jazz
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####COMMIT IMAGE
```
sudo docker commit -m=”Base Jazz Installed” -a=”Niklaus Hirt” fbed978ca9b3 jazz501:jke_std&lt;/p&gt;

&lt;p&gt;sudo docker commit -m=”Base Jazz Installed” -a=”Niklaus Hirt” 8dc45da94ab7 jazz501:jke_std&lt;/p&gt;

&lt;p&gt;sudo docker commit -m=”Base Jazz Installed” -a=”Niklaus Hirt” 8dc45da94ab7 jazz501:jke_last
```&lt;/p&gt;

&lt;p&gt;####TAG IMAGE
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker tag 5db5f8471261 ouruser/sinatra:devel
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####STOP ALL CONTAINERS
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker stop $(sudo docker ps -a -q)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####REMOVE ALL CONTAINERS
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker rm -v $(sudo docker ps -a -q)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####REMOVE ALL IMAGES!!!!!
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker rmi $(sudo docker images -a -q)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####PUSH
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker push ouruser/sinatra
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####IMPORT
&lt;code class=&quot;highlighter-rouge&quot;&gt;
cat exampleimage.tgz | sudo docker import - exampleimagelocal:new
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####SAVE
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker save -o fedora-latest.tar fedora:latest
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;####LOAD
&lt;code class=&quot;highlighter-rouge&quot;&gt;
sudo docker load &amp;lt; busybox.tar
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;docker-doc&quot;&gt;Docker Doc&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#why&quot;&gt;Why&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#prerequisites&quot;&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#containers&quot;&gt;Containers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#images&quot;&gt;Images&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#registry--repository&quot;&gt;Registry and Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#dockerfile&quot;&gt;Dockerfile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#layers&quot;&gt;Layers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#links&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#volumes&quot;&gt;Volumes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#exposing-ports&quot;&gt;Exposing Ports&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#best-practices&quot;&gt;Best Practices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#security&quot;&gt;Security&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tips&quot;&gt;Tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why&quot;&gt;Why&lt;/h2&gt;

&lt;p&gt;“With Docker, developers can build any app in any language using any toolchain. “Dockerized” apps are completely portable and can run anywhere - colleagues’ OS X and Windows laptops, QA servers running Ubuntu in the cloud, and production data center VMs running Red Hat.&lt;/p&gt;

&lt;p&gt;Developers can get going quickly by starting with one of the 13,000+ apps available on Docker Hub. Docker manages and tracks changes and dependencies, making it easier for sysadmins to understand how the apps that developers build work. And with Docker Hub, developers can automate their build pipeline and share artifacts with collaborators through public or private repositories.&lt;/p&gt;

&lt;p&gt;Docker helps developers build and ship higher-quality applications, faster.” – &lt;a href=&quot;https://www.docker.com/whatisdocker/#copy1&quot;&gt;What is Docker&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I use &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh&quot;&gt;Oh My Zsh&lt;/a&gt; with the &lt;a href=&quot;https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins#docker&quot;&gt;Docker plugin&lt;/a&gt; for autocompletion of docker commands.  YMMV.&lt;/p&gt;

&lt;h3 id=&quot;linux&quot;&gt;Linux&lt;/h3&gt;

&lt;p&gt;The 3.10.x kernel is &lt;a href=&quot;https://docs.docker.com/installation/binaries/#check-kernel-dependencies&quot;&gt;the minimum requirement&lt;/a&gt; for Docker.&lt;/p&gt;

&lt;h3 id=&quot;macos&quot;&gt;MacOS&lt;/h3&gt;

&lt;p&gt;10.8 “Mountain Lion” or newer is required.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;h3 id=&quot;linux-1&quot;&gt;Linux&lt;/h3&gt;

&lt;p&gt;Quick and easy install script provided by Docker:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -sSL https://get.docker.com/ | sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you’re not willing to run a random shell script, please see the &lt;a href=&quot;https://docs.docker.com/installation/&quot;&gt;installation&lt;/a&gt; instructions for your distribution.&lt;/p&gt;

&lt;p&gt;If you are a complete Docker newbie, you should follow the &lt;a href=&quot;https://docs.docker.com/linux/started/&quot;&gt;series of tutorials&lt;/a&gt; now.&lt;/p&gt;

&lt;h3 id=&quot;mac-os-x&quot;&gt;Mac OS X&lt;/h3&gt;

&lt;p&gt;Download and install &lt;a href=&quot;https://www.docker.com/toolbox&quot;&gt;Docker Toolbox&lt;/a&gt;.  If that doesn’t work, see the &lt;a href=&quot;https://docs.docker.com/installation/mac/&quot;&gt;installation instructions&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Docker used to use boot2docker, but you should be using docker machine now. The Docker website has instructions on &lt;a href=&quot;https://docs.docker.com/installation/mac/#migrate-from-boot2docker&quot;&gt;how to upgrade&lt;/a&gt;.  If you have an existing docker instance, you can also install the &lt;a href=&quot;https://docs.docker.com/machine/install-machine/&quot;&gt;Docker Machine&lt;/a&gt; binaries directly.&lt;/p&gt;

&lt;p&gt;Once you’ve installed Docker Toolbox, install a VM with Docker Machine using the VirtualBox provider:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-machine create --driver=virtualbox default
docker-machine ls
eval &quot;$(docker-machine env default)&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then start up a container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s it, you have a running Docker container.&lt;/p&gt;

&lt;p&gt;If you are a complete Docker newbie, you should probably follow the &lt;a href=&quot;https://docs.docker.com/mac/started/&quot;&gt;series of tutorials&lt;/a&gt; now.&lt;/p&gt;

&lt;h2 id=&quot;containers&quot;&gt;Containers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://etherealmind.com/basics-docker-containers-hypervisors-coreos/&quot;&gt;Your basic isolated Docker process&lt;/a&gt;.  Containers are to Virtual Machines as threads are to processes.  Or you can think of them as chroots on steroids.&lt;/p&gt;

&lt;h3 id=&quot;lifecycle&quot;&gt;Lifecycle&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/create&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker create&lt;/code&gt;&lt;/a&gt; creates a container but does not start it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/run&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker run&lt;/code&gt;&lt;/a&gt; creates and starts a container in one operation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/stop&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker stop&lt;/code&gt;&lt;/a&gt; stops it.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/start&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker start&lt;/code&gt;&lt;/a&gt; will start it again.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/restart&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker restart&lt;/code&gt;&lt;/a&gt; restarts a container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/rm&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker rm&lt;/code&gt;&lt;/a&gt; deletes a container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/kill&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker kill&lt;/code&gt;&lt;/a&gt; sends a SIGKILL to a container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/attach&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker attach&lt;/code&gt;&lt;/a&gt; will connect to a running container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/wait&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker wait&lt;/code&gt;&lt;/a&gt; blocks until container stops.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want to run and then interact with a container, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker start&lt;/code&gt;, then spawn a shell as described in &lt;a href=&quot;https://github.com/wsargent/docker-cheat-sheet/#executing-commands&quot;&gt;Executing Commands&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want a transient container, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run --rm&lt;/code&gt; will remove the container after it stops.&lt;/p&gt;

&lt;p&gt;If you want to remove also the volumes associated with the container, the deletion of the container must include the -v switch like in &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rm -v&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to poke around in an image, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run -t -i &amp;lt;myimage&amp;gt; &amp;lt;myshell&amp;gt;&lt;/code&gt; to open a tty.&lt;/p&gt;

&lt;p&gt;If you want to poke around in a running container, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec -t -i &amp;lt;mycontainer&amp;gt; &amp;lt;myshell&amp;gt;&lt;/code&gt; to open a tty.&lt;/p&gt;

&lt;p&gt;If you want to map a directory on the host to a docker container, &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run -v $HOSTDIR:$DOCKERDIR&lt;/code&gt;.  Also see &lt;a href=&quot;https://github.com/wsargent/docker-cheat-sheet/#volumes&quot;&gt;Volumes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to integrate a container with a &lt;a href=&quot;https://docs.docker.com/articles/host_integration/&quot;&gt;host process manager&lt;/a&gt;, start the daemon with &lt;code class=&quot;highlighter-rouge&quot;&gt;-r=false&lt;/code&gt; then use &lt;code class=&quot;highlighter-rouge&quot;&gt;docker start -a&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to expose container ports through the host, see the &lt;a href=&quot;#exposing-ports&quot;&gt;exposing ports&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;Restart policies on crashed docker instances are &lt;a href=&quot;http://container42.com/2014/09/30/docker-restart-policies/&quot;&gt;covered here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;info&quot;&gt;Info&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/ps&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps&lt;/code&gt;&lt;/a&gt; shows running containers.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/logs&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker logs&lt;/code&gt;&lt;/a&gt; gets logs from container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/inspect&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker inspect&lt;/code&gt;&lt;/a&gt; looks at all the info on a container (including IP address).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/events&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker events&lt;/code&gt;&lt;/a&gt; gets events from container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/port&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker port&lt;/code&gt;&lt;/a&gt; shows public facing port of container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/top&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker top&lt;/code&gt;&lt;/a&gt; shows running processes in container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/stats&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker stats&lt;/code&gt;&lt;/a&gt; shows containers’ resource usage statistics.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/diff&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker diff&lt;/code&gt;&lt;/a&gt; shows changed files in the container’s FS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker ps -a&lt;/code&gt; shows running and stopped containers.&lt;/p&gt;

&lt;h3 id=&quot;import--export&quot;&gt;Import / Export&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/cp&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker cp&lt;/code&gt;&lt;/a&gt; copies files or folders between a container and the local filesystem..&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/export&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker export&lt;/code&gt;&lt;/a&gt; turns container filesystem into tarball archive stream to STDOUT.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;executing-commands&quot;&gt;Executing Commands&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/exec&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec&lt;/code&gt;&lt;/a&gt; to execute a command in container.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To enter a running container, attach a new shell process to a running container called foo, use: &lt;code class=&quot;highlighter-rouge&quot;&gt;docker exec -it foo /bin/bash&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;images&quot;&gt;Images&lt;/h2&gt;

&lt;p&gt;Images are just &lt;a href=&quot;https://docs.docker.com/introduction/understanding-docker/#how-does-a-docker-image-work&quot;&gt;templates for docker containers&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;lifecycle-1&quot;&gt;Lifecycle&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/images&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker images&lt;/code&gt;&lt;/a&gt; shows all images.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/import&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker import&lt;/code&gt;&lt;/a&gt; creates an image from a tarball.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/build&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker build&lt;/code&gt;&lt;/a&gt; creates image from Dockerfile.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/commit&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker commit&lt;/code&gt;&lt;/a&gt; creates image from a container.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/rmi&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker rmi&lt;/code&gt;&lt;/a&gt; removes an image.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/load&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker load&lt;/code&gt;&lt;/a&gt; loads an image from a tar archive as STDIN, including images and tags (as of 0.7).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/save&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker save&lt;/code&gt;&lt;/a&gt; saves an image to a tar archive stream to STDOUT with all parent layers, tags &amp;amp; versions (as of 0.7).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;info-1&quot;&gt;Info&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/history&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker history&lt;/code&gt;&lt;/a&gt; shows history of image.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/tag&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker tag&lt;/code&gt;&lt;/a&gt; tags an image to a name (local or registry).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;registry--repository&quot;&gt;Registry &amp;amp; Repository&lt;/h2&gt;

&lt;p&gt;A repository is a &lt;em&gt;hosted&lt;/em&gt; collection of tagged images that together create the file system for a container.&lt;/p&gt;

&lt;p&gt;A registry is a &lt;em&gt;host&lt;/em&gt; – a server that stores repositories and provides an HTTP API for &lt;a href=&quot;https://docs.docker.com/userguide/dockerrepos/&quot;&gt;managing the uploading and downloading of repositories&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Docker.com hosts its own &lt;a href=&quot;https://registry.hub.docker.com/&quot;&gt;index&lt;/a&gt; to a central registry which contains a large number of repositories.  Having said that, the central docker registry &lt;a href=&quot;https://titanous.com/posts/docker-insecurity&quot;&gt;does not do a good job of verifying images&lt;/a&gt; and should be avoided if you’re worried about security.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/login&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker login&lt;/code&gt;&lt;/a&gt; to login to a registry.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/search&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker search&lt;/code&gt;&lt;/a&gt; searches registry for image.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/pull&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker pull&lt;/code&gt;&lt;/a&gt; pulls an image from registry to local machine.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/commandline/push&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker push&lt;/code&gt;&lt;/a&gt; pushes an image to the registry from local machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;run-local-registry&quot;&gt;Run local registry&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/docker/docker-registry&quot;&gt;Registry implementation&lt;/a&gt; has an official image for basic setup that can be launched with
&lt;a href=&quot;https://github.com/docker/docker-registry#quick-start&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker run -p 5000:5000 registry&lt;/code&gt;&lt;/a&gt;
Note that this installation does not have any authorization controls. You may use option &lt;code class=&quot;highlighter-rouge&quot;&gt;-P -p 127.0.0.1:5000:5000&lt;/code&gt; to limit connections to localhost only.
In order to push to this repository tag image with &lt;code class=&quot;highlighter-rouge&quot;&gt;repositoryHostName:5000/imageName&lt;/code&gt; then push this tag.&lt;/p&gt;

&lt;h2 id=&quot;dockerfile&quot;&gt;Dockerfile&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/&quot;&gt;The configuration file&lt;/a&gt;. Sets up a Docker container when you run &lt;code class=&quot;highlighter-rouge&quot;&gt;docker build&lt;/code&gt; on it.  Vastly preferable to &lt;code class=&quot;highlighter-rouge&quot;&gt;docker commit&lt;/code&gt;.  If you use &lt;a href=&quot;http://jedit.org&quot;&gt;jEdit&lt;/a&gt;, I’ve put up a syntax highlighting module for &lt;a href=&quot;https://github.com/wsargent/jedit-docker-mode&quot;&gt;Dockerfile&lt;/a&gt; you can use.  You may also like to try the &lt;a href=&quot;#tools&quot;&gt;tools section&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;instructions&quot;&gt;Instructions&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#the-dockerignore-file&quot;&gt;.dockerignore&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#from&quot;&gt;FROM&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#maintainer&quot;&gt;MAINTAINER&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#run&quot;&gt;RUN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#cmd&quot;&gt;CMD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#expose&quot;&gt;EXPOSE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#env&quot;&gt;ENV&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#add&quot;&gt;ADD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#copy&quot;&gt;COPY&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#entrypoint&quot;&gt;ENTRYPOINT&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#volume&quot;&gt;VOLUME&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#user&quot;&gt;USER&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#workdir&quot;&gt;WORKDIR&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#onbuild&quot;&gt;ONBUILD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tutorial&quot;&gt;Tutorial&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://flux7.com/blogs/docker/docker-tutorial-series-part-3-automation-is-the-word-using-dockerfile/&quot;&gt;Flux7’s Dockerfile Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;layers&quot;&gt;Layers&lt;/h2&gt;

&lt;p&gt;The versioned filesystem in Docker is based on layers.  They’re like &lt;a href=&quot;https://docs.docker.com/terms/layer/&quot;&gt;git commits or changesets for filesystems&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that if you’re using &lt;a href=&quot;https://en.wikipedia.org/wiki/Aufs&quot;&gt;aufs&lt;/a&gt; as your filesystem, Docker does not always remove data volumes containers layers when you delete a container!  See &lt;a href=&quot;https://github.com/docker/docker/pull/8484&quot;&gt;PR 8484&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;p&gt;Links are how Docker containers talk to each other &lt;a href=&quot;https://docs.docker.com/userguide/dockerlinks/&quot;&gt;through TCP/IP ports&lt;/a&gt;.  &lt;a href=&quot;https://docs.docker.com/examples/running_redis_service/&quot;&gt;Linking into Redis&lt;/a&gt; and &lt;a href=&quot;https://blogs.atlassian.com/2013/11/docker-all-the-things-at-atlassian-automation-and-wiring/&quot;&gt;Atlassian&lt;/a&gt; show worked examples.  You can also (in 0.11) resolve &lt;a href=&quot;https://docs.docker.com/userguide/dockerlinks/#updating-the-etchosts-file&quot;&gt;links by hostname&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;NOTE: If you want containers to ONLY communicate with each other through links, start the docker daemon with &lt;code class=&quot;highlighter-rouge&quot;&gt;-icc=false&lt;/code&gt; to disable inter process communication.&lt;/p&gt;

&lt;p&gt;If you have a container with the name CONTAINER (specified by &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run --name CONTAINER&lt;/code&gt;) and in the Dockerfile, it has an exposed port:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;EXPOSE 1337
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then if we create another container called LINKED like so:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -d --link CONTAINER:ALIAS --name LINKED user/wordpress
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then the exposed ports and aliases of CONTAINER will show up in LINKED with the following environment variables:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ALIAS_PORT_1337_TCP_PORT
$ALIAS_PORT_1337_TCP_ADDR
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And you can connect to it that way.&lt;/p&gt;

&lt;p&gt;To delete links, use &lt;code class=&quot;highlighter-rouge&quot;&gt;docker rm --link &lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to link across docker hosts then you should look at &lt;a href=&quot;https://docs.docker.com/swarm/&quot;&gt;Swarm&lt;/a&gt;. This &lt;a href=&quot;https://stackoverflow.com/questions/21283517/how-to-link-docker-services-across-hosts&quot;&gt;link on stackoverflow&lt;/a&gt; provides some good information on different patterns for linking containers across docker hosts.&lt;/p&gt;

&lt;h2 id=&quot;volumes&quot;&gt;Volumes&lt;/h2&gt;

&lt;p&gt;Docker volumes are &lt;a href=&quot;https://docs.docker.com/userguide/dockervolumes/&quot;&gt;free-floating filesystems&lt;/a&gt;.  They don’t have to be connected to a particular container.  You should use volumes mounted from &lt;a href=&quot;https://medium.com/@ramangupta/why-docker-data-containers-are-good-589b3c6c749e&quot;&gt;data-only containers&lt;/a&gt; for portability.&lt;/p&gt;

&lt;p&gt;Volumes are useful in situations where you can’t use links (which are TCP/IP only).  For instance, if you need to have two docker instances communicate by leaving stuff on the filesystem.&lt;/p&gt;

&lt;p&gt;You can mount them in several docker containers at once, using &lt;code class=&quot;highlighter-rouge&quot;&gt;docker run --volumes-from&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Because volumes are isolated filesystems, they are often used to store state from computations between transient containers.  That is, you can have a stateless and transient container run from a recipe, blow it away, and then have a second instance of the transient container pick up from where the last one left off.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://crosbymichael.com/advanced-docker-volumes.html&quot;&gt;advanced volumes&lt;/a&gt; for more details.  Container42 is &lt;a href=&quot;http://container42.com/2014/11/03/docker-indepth-volumes/&quot;&gt;also helpful&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For an easy way to clean abandoned volumes, see &lt;a href=&quot;https://github.com/chadoe/docker-cleanup-volumes&quot;&gt;docker-cleanup-volumes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As of 1.3, you can &lt;a href=&quot;https://docs.docker.com/userguide/dockervolumes/#mount-a-host-directory-as-a-data-volume&quot;&gt;map MacOS host directories as docker volumes&lt;/a&gt; through boot2docker:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -v /Users/wsargent/myapp/src:/src
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can also use remote NFS volumes if you’re &lt;a href=&quot;http://www.tech-d.net/2014/03/29/docker-quicktip-4-remote-volumes/&quot;&gt;feeling brave&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You may also consider running data-only containers as described &lt;a href=&quot;http://container42.com/2013/12/16/persistent-volumes-with-docker-container-as-volume-pattern/&quot;&gt;here&lt;/a&gt; to provide some data portability.&lt;/p&gt;

&lt;h2 id=&quot;exposing-ports&quot;&gt;Exposing ports&lt;/h2&gt;

&lt;p&gt;Exposing incoming ports through the host container is &lt;a href=&quot;https://docs.docker.com/reference/run/#expose-incoming-ports&quot;&gt;fiddly but doable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The fastest way is to map the container port to the host port (only using localhost interface) using &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -p 127.0.0.1:$HOSTPORT:$CONTAINERPORT --name CONTAINER -t someimage
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t want to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; option on the command line, you can persist port forwarding by using &lt;a href=&quot;https://docs.docker.com/reference/builder/#expose&quot;&gt;EXPOSE&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;EXPOSE &amp;lt;CONTAINERPORT&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you’re running Docker in Virtualbox, you then need to forward the port there as well, using &lt;a href=&quot;https://docs.vagrantup.com/v2/networking/forwarded_ports.html&quot;&gt;forwarded_port&lt;/a&gt;.  It can be useful to define something in Vagrantfile to expose a range of ports so that you can dynamically map them:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  ...

  (49000..49900).each do |port|
    config.vm.network :forwarded_port, :host =&amp;gt; port, :guest =&amp;gt; port
  end

  ...
end
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you forget what you mapped the port to on the host container, use &lt;code class=&quot;highlighter-rouge&quot;&gt;docker port&lt;/code&gt; to show it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker port CONTAINER $CONTAINERPORT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;examples&quot;&gt;Examples&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/reference/builder/#dockerfile-examples&quot;&gt;Examples&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.docker.com/articles/dockerfile_best-practices/&quot;&gt;Best practices for writing Dockerfiles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://crosbymichael.com/&quot;&gt;Michael Crosby&lt;/a&gt; has some more &lt;a href=&quot;http://crosbymichael.com/dockerfile-best-practices.html&quot;&gt;Dockerfiles best practices&lt;/a&gt; / &lt;a href=&quot;http://crosbymichael.com/dockerfile-best-practices-take-2.html&quot;&gt;take 2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;best-practices&quot;&gt;Best Practices&lt;/h2&gt;

&lt;p&gt;This is where general Docker best practices and war stories go:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://gregoryszorc.com/blog/2014/10/16/the-rabbit-hole-of-using-docker-in-automated-tests/&quot;&gt;The Rabbit Hole of Using Docker in Automated Tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://twitter.com/bridgetkromhout&quot;&gt;Bridget Kromhout&lt;/a&gt; has a useful blog post on &lt;a href=&quot;http://sysadvent.blogspot.co.uk/2014/12/day-1-docker-in-production-reality-not.html&quot;&gt;running Docker in production&lt;/a&gt; at Dramafever.&lt;/li&gt;
  &lt;li&gt;There’s also a best practices &lt;a href=&quot;http://developers.lyst.com/devops/2014/12/08/docker/&quot;&gt;blog post&lt;/a&gt; from Lyst.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.relateiq.com/a-docker-dev-environment-in-24-hours-part-2-of-2/&quot;&gt;A Docker Dev Environment in 24 Hours!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tersesystems.com/2013/11/20/building-a-development-environment-with-docker/&quot;&gt;Building a Development Environment With Docker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://samsaffron.com/archive/2013/11/07/discourse-in-a-docker-container&quot;&gt;Discourse in a Docker Container&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;security&quot;&gt;Security&lt;/h2&gt;

&lt;p&gt;This is where security tips about Docker go.&lt;/p&gt;

&lt;p&gt;If you are in the &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt; group, you effectively &lt;a href=&quot;http://reventlov.com/advisories/using-the-docker-command-to-root-the-host&quot;&gt;have root access&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Likewise, if you expose the docker unix socket to a container, you are giving the container &lt;a href=&quot;https://www.lvh.io/posts/dont-expose-the-docker-socket-not-even-to-a-container.html&quot;&gt;root access to the host&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Docker image ids are &lt;a href=&quot;https://medium.com/@quayio/your-docker-image-ids-are-secrets-and-its-time-you-treated-them-that-way-f55e9f14c1a4&quot;&gt;sensitive information&lt;/a&gt; and should not be exposed to the outside world.  Treat them like passwords.&lt;/p&gt;

&lt;p&gt;See the &lt;a href=&quot;https://github.com/konstruktoid/Docker/blob/master/Security/CheatSheet.md&quot;&gt;Docker Security Cheat Sheet&lt;/a&gt; by &lt;a href=&quot;https://github.com/konstruktoid&quot;&gt;Thomas Sjögren&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From the &lt;a href=&quot;http://container-solutions.com/content/uploads/2015/06/15.06.15_DockerCheatSheet_A2.pdf&quot;&gt;Docker Security Cheat Sheet&lt;/a&gt; (it’s in PDF which makes it hard to use, so copying below) by &lt;a href=&quot;http://container-solutions.com/is-docker-safe-for-production/&quot;&gt;Container Solutions&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;Turn off interprocess communication with:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker -d --icc=false --iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Set the container to be read-only:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --read-only
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Verify images with a hashsum:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker pull debian@sha256:a25306f3850e1bd44541976aa7b5fd0a29be
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Set volumes to be read only:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -v $(pwd)/secrets:/secrets:ro debian 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Set memory and CPU sharing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker -c 512 -mem 512m
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Define and run a user in your Dockerfile so you don’t run as root inside the container:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RUN groupadd -r user &amp;amp;&amp;amp; useradd -r -g user user
USER user
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;tips&quot;&gt;Tips&lt;/h2&gt;

&lt;p&gt;Sources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://sssslide.com/speakerdeck.com/bmorearty/15-docker-tips-in-5-minutes&quot;&gt;15 Docker Tips in 5 minutes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;last-ids&quot;&gt;Last Ids&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias dl=&#39;docker ps -l -q&#39;
docker run ubuntu echo hello world
docker commit `dl` helloworld
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;commit-with-command-needs-dockerfile&quot;&gt;Commit with command (needs Dockerfile)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker commit -run=&#39;{&quot;Cmd&quot;:[&quot;postgres&quot;, &quot;-too -many -opts&quot;]}&#39; `dl` postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;get-ip-address&quot;&gt;Get IP address&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker inspect `dl` | grep IPAddress | cut -d &#39;&quot;&#39; -f 4
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://stedolan.github.io/jq/download/source/jq-1.3.tar.gz
tar xzvf jq-1.3.tar.gz
cd jq-1.3
./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; sudo make install
docker inspect `dl` | jq -r &#39;.[0].NetworkSettings.IPAddress&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;or using a &lt;a href=&quot;https://docs.docker.com/reference/commandline/inspect&quot;&gt;go template&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker inspect -f &#39;&#39; &amp;lt;container_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;get-port-mapping&quot;&gt;Get port mapping&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker inspect -f &#39;  -&amp;gt;  &#39; &amp;lt;containername&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;find-containers-by-regular-expression&quot;&gt;Find containers by regular expression&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for i in $(docker ps -a | grep &quot;REGEXP_PATTERN&quot; | cut -f1 -d&quot; &quot;); do echo $i; done`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;get-environment-settings&quot;&gt;Get Environment Settings&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run --rm ubuntu env
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;kill-running-containers&quot;&gt;Kill running containers&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker kill $(docker ps -q)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;delete-old-containers&quot;&gt;Delete old containers&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker ps -a | grep &#39;weeks ago&#39; | awk &#39;{print $1}&#39; | xargs docker rm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;delete-stopped-containers&quot;&gt;Delete stopped containers&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker rm -v `docker ps -a -q -f status=exited`
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;delete-dangling-images&quot;&gt;Delete dangling images&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker rmi $(docker images -q -f dangling=true)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;delete-all-images&quot;&gt;Delete all images&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker rmi $(docker images -q)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;show-image-dependencies&quot;&gt;Show image dependencies&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker images -viz | dot -Tpng -o docker.png
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;slimming-down-docker-containers--intercity-bloghttpbitly1wwo61n&quot;&gt;Slimming down Docker containers  &lt;a href=&quot;http://bit.ly/1Wwo61N&quot;&gt;Intercity Blog&lt;/a&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Cleaning APT
&lt;code class=&quot;highlighter-rouge&quot;&gt;
RUN apt-get clean
RUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Flatten an image
&lt;code class=&quot;highlighter-rouge&quot;&gt;
ID=$(docker run -d image-name /bin/bash)
docker export $ID | docker import – flat-image-name
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;For backup
&lt;code class=&quot;highlighter-rouge&quot;&gt;
ID=$(docker run -d image-name /bin/bash)
(docker export $ID | gzip -c &amp;gt; image.tgz)
gzip -dc image.tgz | docker import - flat-image-name
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;monitor-system-resource-utilization-for-running-containers&quot;&gt;Monitor system resource utilization for running containers&lt;/h3&gt;

&lt;p&gt;To check the CPU, memory and network i/o usage, you can use:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stats &amp;lt;container&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;for a single container or&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker stats $(docker ps -q)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;to monitor all containers on the docker host.&lt;/p&gt;
</description>
        <pubDate>Sat, 26 Mar 2016 17:45:12 +0100</pubDate>
        <link>http://nik.cloud/jekyll/test/2016/03/26/test.html</link>
        <guid isPermaLink="true">http://nik.cloud/jekyll/test/2016/03/26/test.html</guid>
        
        
        <category>jekyll</category>
        
        <category>test</category>
        
      </item>
    
  </channel>
</rss>
